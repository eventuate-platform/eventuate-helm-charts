# Default values for eventuate-cdc.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: eventuateio/eventuate-cdc-service
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.14.0.RELEASE"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Configures the CDC to read from transaction outboxes (https://microservices.io/patterns/data/transactional-outbox.html) on one or more MySQL database servers and publish them to Apache Kafka

cdc:
  # Single host name, appends :2181
  # zookeeper: zookeeper
  # zookeeperConnectString: zookeeper-a:2181,zookeeper-b:2181,zookeeper-c:2181
  # Single host name, appends :9092
  # kafka: kafka
  # kafkaBootstrapBrokers: kafka-a:9092,kafka-b:9092,kafka-c:9092
  # additional configuration options
  envFroms: []
  # The database servers that have outbox tables
  databaseServers:
    - mysql:
      # the Kubernates Service
      host: test-mysql
      credentials:
        username:
          value: root
        password:
          valueFrom:
            secretKeyRef:
              name: test-mysql-database-credentials
              key: rootPassword
      # The databases on the server that contain a transaction outbox, i.e. MESSAGE table
      databases: 
        - eventuate
