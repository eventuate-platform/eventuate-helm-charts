apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "initialize-cdc-schema.fullname" . }}
spec:
  template:
    spec:
      initContainers:
      - name: create-flyway-config
        image: alpine:3.18.2
        command: ["sh"]
        args:
          - "-c"
          - |
            echo > /flyway/conf/flyway.conf "
{{ if eq .Values.dbType "mysql"}}            
            flyway.url=jdbc:mysql://$DB_HOST/$DB_DATABASE?allowPublicKeyRetrieval=true
{{ else if eq .Values.dbType "postgres" }}            
            flyway.url=jdbc:postgresql://$DB_HOST/$DB_DATABASE
{{ end }}
            flyway.user=$DB_USER_NAME
            flyway.password=$DB_PASSWORD
            flyway.baselineOnMigrate=true
            # It was skipping V1
            flyway.baselineVersion=0.0
            "
            cat /flyway/conf/flyway.conf
        env:
          - name: DB_HOST
            value: {{ .Values.dbHost }}
          - name: DB_DATABASE
            value: {{ .Values.dbDatabase }}

{{ if eq .Values.dbType "mysql"}}            
          - name: DB_USER_NAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.dbCredentialsConfigMap }}
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.dbCredentialsConfigMap }}
                key: password
{{ else if eq .Values.dbType "postgres" }}            
          - name: DB_USER_NAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.dbCredentialsConfigMap }}
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.dbCredentialsConfigMap }}
                key: password
{{ end }}

        volumeMounts:
          - name: flyway-conf
            mountPath: "/flyway/conf"
      containers:
          - name: flyway
            image: flyway/flyway:9.0.4-alpine
            args:
              - "migrate"
            volumeMounts:
              - name: flyway-conf
                mountPath: "/flyway/conf"
                readOnly: true
              - name: flyway-sql
                mountPath: "/flyway/sql"
                readOnly: true
      volumes:
        - name: flyway-conf
          emptyDir: {}
        - name: flyway-sql
          configMap:
            name: {{ include "initialize-cdc-schema.fullname" . }}-flyway-sql
      restartPolicy: OnFailure
  backoffLimit: 4

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "initialize-cdc-schema.fullname" . }}-flyway-sql
data:
  V1__eventuate_database.sql: |
      create table cdc_monitoring (
        reader_id VARCHAR(255) PRIMARY KEY,
        last_time BIGINT
      );
{{ if eq .Values.dbType "postgres" }}            
  V2__eventuate_slot.sql: |
      SELECT * FROM pg_create_logical_replication_slot('eventuate_slot', 'wal2json');
{{ end }}

