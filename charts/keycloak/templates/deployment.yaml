apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "keycloak.fullname" . }}
  labels:
    {{- include "keycloak.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "keycloak.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "keycloak.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "keycloak.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: initializedb
          image: mysql/mysql-server:8.0.27-1.2.6-server
          command: ["bash"]
          args:
            - "-c"
            - |
              set -e

              MYSQL_CMD="exec mysql -h{{ include "keycloak.fullname" . }}-mysql  -uroot -prootpassword"

              for run in {1..20}; do
                if echo "select 1" | $MYSQL_CMD ; then
                  break
                fi
                sleep 5
              done            
            
              echo "create database if not exists keycloak;" | $MYSQL_CMD
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["bash"]
          args: 
            - "-c"
            - |
              /opt/keycloak/bin/kc.sh build --db mysql
              /opt/keycloak/bin/kc.sh start-dev --import-realm --db mysql --db-schema keycloak --db-url-host {{ include "keycloak.fullname" . }}-mysql --db-username root --db-password rootpassword
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          startupProbe:
            httpGet:
              path: /
              port: http
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: http
            periodSeconds: 10              
          readinessProbe:
            httpGet:
              path: /
              port: http
            periodSeconds: 10              
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: realm-import
              mountPath: "/opt/keycloak/data/import"
              readOnly: true
      volumes:
        - name: realm-import
          configMap:
            name: {{ include "keycloak.fullname" . }}-realm-import
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
